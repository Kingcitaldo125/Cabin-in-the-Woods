uniform vec3 translation;
uniform mat4 viewProjMatrix;
uniform mat4 projectionMarrix;
uniform vec4 cameraU;
uniform vec4 cameraV;
uniform vec4 cameraW;
uniform vec4 eyePos;
uniform vec2 a_size;
uniform mat4 worldMatrix;

attribute vec3 position;
attribute vec2 texcoord;
attribute vec3 normal;

varying vec2 v_texcoord;
varying vec4 oWorldPos;
varying vec4 oNormal;

void main()
{
	oWorldPos = vec4(position,1.0)*worldMatrix;
	vec4 n = vec4(normal,0.0) * worldMatrix;
	oNormal = n;
	
	v_texcoord = texcoord;
    vec3 p = position + translation;
    vec2 tmp = (texcoord - vec2(0.5)) * 2.0;
    
    vec3 U,V;
    //tree-style billboards
    V = vec3(0.0,1.0,0.0);
    vec3 W = eyePos.xyz-p;
    U = cross(V,W);
    U = normalize(U);
    //W = cross(U,V);
    
    p = position + tmp.x * a_size.x * U + tmp.y * a_size.y * V;
	//p=position+tmp.x*U*tmp.y*V;
    
    gl_Position = vec4(p,1.0) * viewProjMatrix;
}